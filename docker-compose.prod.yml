services: 

  nats-server:
    image: nats:latest

  client-gateway:
    depends_on:
      - nats-server
    build: 
      context: ./client-gateway
      dockerfile: dockerfile.prod
    image: client-gateway-prod
    ports:
      - ${CLIENT_GATEWAY_PORT}:${CLIENT_GATEWAY_PORT}
    environment:
      - PORT=${CLIENT_GATEWAY_PORT}
      - NATS_SERVERS=nats://nats-server:4222

  auth-ms:
    depends_on:
      - nats-server
    build: 
      context: ./auth-ms
      dockerfile: dockerfile.prod
    image: auth-ms
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222  
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}

  products-ms:
    build: 
      context: ./products-ms
      dockerfile: dockerfile.prod
    image: products-ms
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db

#   orders-ms:
#     depends_on:
#       - orders-db
#     build: ./orders-microservices
#     volumes:
#       - ./orders-microservices/src:/usr/src/app/src
#       - ./orders-microservices/prisma:/usr/src/app/prisma
#       - /usr/src/app/node_modules  # Evitar que se sobrescriban los node_modules
#     command: pnpm run start:dev --watch --watchOptions.poll=1000
#     environment:
#       - PORT=3002
#       - NATS_SERVERS=nats://nats-server:4222
#       - DATABASE_URL=postgresql://postgres:123456@orders-db:5432/ordersdb

# # ==============
# Payments Microservice
# ==============
  payments-ms:
    container_name: payments-ms
    build: 
      context: ./payments-ms
      dockerfile: dockerfile.prod
    ports: 
      - "${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}"
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}